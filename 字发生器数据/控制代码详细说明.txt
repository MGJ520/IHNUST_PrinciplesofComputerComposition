00000000010000000000100000011110   //加载数字1
00000000010000000000100010011110   //存入数字1
00000000010000000000100000011110   //关闭端口

00000000010000000000000000011110   //加载数字2
00000000010000000000000100011110   //存入数字2
00000000010000000000000000011110   //关闭端口

00000000010000000000000000011111  //存入缓存1，关闭输入
00000000010000000000000000010111  //打开锁存器1
00000000010000000000000000110111  //输入缓存1
00000000010000000000000000011111  //关闭缓存1，关闭锁存器1

00000000010000000000000000011111  //存入缓存2，关闭输入
00000000010000000000000000001111  //打开锁存器2
00000000010000000000000001001111  //输入缓存2
00000000010000000000000000011111  //关闭缓存2，关闭锁存器2

00000000010000000000000000011001 //输出缓存器1，2    1
10000000000110010000000000011001 //计算A+B
10000000100110010000000010011001 //输出A+B
10000000100110010000000000011001 //输出A+B

00000000010000000000000000011001 //输出缓存器1，2    2
01000000000001100000000000011001 //计算A-B
01000001000001100000000100011001 //输出A-B
01000001000001100000000000011001 //输出A-B

00000000010000000000000000011001 //输出缓存器1，2    1
00100000001010110000000000011001 //计算A^B
00100000101010110000000010011001 //输出A^B
00100000101010110000000000011001 //输出A^B

00000000010000000000000000011001 //输出缓存器1，2    2
00010000001011100000000000011001 //计算AvB
00010001001011100000000100011001 //输出AvB
00010001001011100000000000011001 //输出AvB

00000000010000000000000000011001 //输出缓存器1，2    1
00001000001010010000000000011001 //计算A⊕B
00001000101010010000000010011001 //输出A⊕B
00001000101010010000000000011001 //输出A⊕B

00000000010000000000000000011001 //输出缓存器1，2    2
00000100001000000000000000011001 //计算~A
00000101001000000000000100011001 //输出~A
00000101001000000000000000011001 //输出~A

00000000010000000000000000011001 //输出缓存器1，2    1
00000010001001010000000000011001 //计算~B
00000010101001010000000010011001 //输出~B
00000010101001010000000000011001 //输出~B

11111110010000000000000000011001 //结束


